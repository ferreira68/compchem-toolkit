name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  tests:
    name: ${{ matrix.session }} ${{ matrix.python }} / ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { python: "3.7", os: "ubuntu-latest" }
          - { python: "3.8", os: "ubuntu-latest" }
          - { python: "3.9", os: "ubuntu-latest" }
          - { python: "3.10", os: "ubuntu-latest" }
          - { python: "3.10", os: "windows-latest" }
          - { python: "3.10", os: "macos-latest" }

    env:
      NOXSESSION: ${{ matrix.session }}
      POETRY_VERSION: "1.6.0"
      FORCE_COLOR: "1"
      PRE_COMMIT_COLOR: "always"

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Upgrade pip
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip --version

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ env.POETRY_VERSION }}

      - name: Setup local virtual environment
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project false --local

      - name: Install package
        run: |
          poetry install

      - name: Install Nox
        uses: excitedleigh/setup-nox@v2.0.0

      - name: Install poetry-nox
        run: pip install nox-poetry

      - name: Compute pre-commit cache key
        id: pre-commit-cache
        shell: python
        run: |
          import hashlib
          import sys

          python = "py{}.{}".format(*sys.version_info[:2])
          payload = sys.version.encode() + sys.executable.encode()
          digest = hashlib.sha256(payload).hexdigest()
          result = "${{ runner.os }}-{}-{}-pre-commit".format(python, digest[:8])

          print("::set-output name=result::{}".format(result))

      - name: Restore pre-commit cache
        uses: actions/cache@v4
        if: matrix.session == 'pre-commit'
        with:
          path: ~/.cache/pre-commit
          key: ${{ steps.pre-commit-cache.outputs.result }}-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ steps.pre-commit-cache.outputs.result }}-

      - name: Run Nox
        run: |
          nox --python=${{ matrix.python }}

      - name: Upload coverage data
        uses: "actions/upload-artifact@v3"
        with:
          name: coverage-data
          path: ".coverage.*"

      - name: Upload documentation
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: docs/_build
