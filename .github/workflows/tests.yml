name: Tests

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]
  issues:
    types: [opened, edited, reopened]

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: ["3.10", "3.11", "3.12"]
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        poetry: ["1.6.0"]
    env:
      FORCE_COLOR: "1"
      PRE_COMMIT_COLOR: "always"
    permissions:
      contents: write
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v4.1.7

      - name: Configure Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Setup Environment
        uses: ./.github/actions/setup-environment
        with:
          python-version: ${{ matrix.python }}
          poetry-version: ${{ matrix.poetry }}

      - name: Run Nox Linting
        run: |
          nox -P ${{ matrix.python }} -s checks

      - name: Run Tests with Coverage
        if: success()
        run: |
          nox -P ${{ matrix.python }} -s tests

      - name: Generate Coverage Data
        if: success()
        run: nox -P ${{ matrix.python }} -s coverage

      - name: Upload Coverage Data
        if: ${{ success() && matrix.python == '3.10' && matrix.os == 'ubuntu-latest' }}
        uses: "actions/upload-artifact@v4"
        with:
          name: coverage-data
          path: |
            .coverage
            coverage.xml
            coverage_html

      - name: Bump Patch Version
        if: ${{ success() && matrix.python == '3.10' && matrix.os == 'ubuntu-latest' }}
        run: nox -P ${{ matrix.python }} -s bump-version -- -- patch

  labels:
    runs-on: "ubuntu-latest"
    needs: tests
    env:
      PYTHON_VERS: "3.10"
      POETRY_VERS: "1.6.0"
      FORCE_COLOR: "1"
      PRE_COMMIT_COLOR: "always"
    permissions:
      contents: write
      issues: write
      pull-requests: write
    if: success()
    steps:
      - name: Auto Labeler
        uses: actions/labeler@v4.3.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Labels
        uses: actions/upload-artifact@v4.4.0
        with:
          name: labels
          path: ./.github/labels.json # Specify your labels file

  build-docs:
    runs-on: ubuntu-latest
    needs: labels
    env:
      PYTHON_VERS: "3.10"
      POETRY_VERS: "1.6.0"
      FORCE_COLOR: "1"
      PRE_COMMIT_COLOR: "always"
    if: success()
    steps:
      - name: Build the Documentation
        if: ${{ success() }}
        run: nox -P ${{ env.PYTHON_VERS }} -s docs-build

      - name: 'Trigger "Read the Docs" Build'
        if: ${{ success() }}
        run: |
          curl -X POST https://readthedocs.org/api/v2/webhook/compchem-toolkit/279213/ \
          -d "token=${{ env.READTHEDOCS_TOKEN }}"
